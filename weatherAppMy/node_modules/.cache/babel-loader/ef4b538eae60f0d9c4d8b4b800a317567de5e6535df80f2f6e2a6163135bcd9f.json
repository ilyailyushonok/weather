{"ast":null,"code":"var _jsxFileName = \"/Users/ilyushonok/ProgrammingCode/weather-app/weather-app-my/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //   https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\n\n  const [city, setSity] = useState('');\n  const [error, setError] = useState(null);\n  const [weather, setWeather] = useState(null);\n  const fetchWeather = () => {\n    const apiKey = '1ce2c8f1225f14bf33b893989c1548cf';\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`).then(response => response.json()).then(json => {\n      if (json.cod === \"404\") {\n        setError('City not found'); // Устанавливаем ошибку, если город не найден                \n      } else {\n        setWeather({\n          temp\n        });\n        setError(null);\n        // Сбрасываем ошибку, если запрос успешен               \n      }\n    }).catch(error => {\n      console.error('Ошибка:', error);\n      setError('An error occurred'); // Общая ошибка на случай других проблем    \n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setSity(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      children: \"Get weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"NqOHQDb8PAvLjUHATS8iGq1uu2w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","city","setSity","error","setError","weather","setWeather","fetchWeather","apiKey","fetch","then","response","json","cod","temp","catch","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","currentTarget","value","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/ilyushonok/ProgrammingCode/weather-app/weather-app-my/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n    //   https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\n\n    const [city, setSity] = useState<string>('')\n    const [error, setError] = useState<null | string>(null)\n    const [weather, setWeather] = useState<{ temp: number, description: string } | null>(null)\n\n    const fetchWeather = () => {\n        const apiKey = '1ce2c8f1225f14bf33b893989c1548cf'\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`)\n            .then(response => response.json())\n            .then(json => {\n                if (json.cod === \"404\") {\n                    setError('City not found'); // Устанавливаем ошибку, если город не найден                \n                } else {\n                    setWeather({\n                        temp\n                    });\n\n\n                    setError(null);\n                    // Сбрасываем ошибку, если запрос успешен               \n                }\n            })\n            .catch(error => {\n                console.error('Ошибка:', error);\n                setError('An error occurred'); // Общая ошибка на случай других проблем    \n            });\n    }\n\n\n    return (\n        <div className=\"App\">\n            <h1>Weather App</h1>\n            <input type=\"text\" onChange={(e) => setSity(e.currentTarget.value)} />\n            <button onClick={fetchWeather}>Get weather</button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}{/*отображаем ошибку*/}\n        </div>\n    )\n\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAA+C,IAAI,CAAC;EAE1F,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,MAAM,GAAG,kCAAkC;IACjDC,KAAK,CAAC,qDAAqDR,IAAI,UAAUO,MAAM,EAAE,CAAC,CAC7EE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAI;MACV,IAAIA,IAAI,CAACC,GAAG,KAAK,KAAK,EAAE;QACpBT,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC;MAChC,CAAC,MAAM;QACHE,UAAU,CAAC;UACPQ;QACJ,CAAC,CAAC;QAGFV,QAAQ,CAAC,IAAI,CAAC;QACd;MACJ;IACJ,CAAC,CAAC,CACDW,KAAK,CAACZ,KAAK,IAAI;MACZa,OAAO,CAACb,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/BC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC;EACV,CAAC;EAGD,oBACIN,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBpB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBxB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC,IAAKvB,OAAO,CAACuB,CAAC,CAACC,aAAa,CAACC,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtExB,OAAA;MAAQ8B,OAAO,EAAErB,YAAa;MAAAW,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClDnB,KAAK,iBAAIL,OAAA;MAAG+B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAZ,QAAA,EAAEf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAGd;AAACtB,EAAA,CAxCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA0CZ,eAAeA,GAAG;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}